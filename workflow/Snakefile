configfile: "config/config.yaml"

include:    "rules/bcftools-view.smk"
include:    "rules/parsed-vcf-annotate.smk"
include:    "rules/annotated-vcf-filter.smk"
include:    "rules/get-plot-files-rule.smk"
include:    "rules/make-SNP-plot.smk"
include:    "rules/delete-filtered-annot-vcfs.smk"

import os
import subprocess

DIR = config["sampledirectory"]
target_file = config["targetfile"]
def get_target_names(target_file):
    sample_list = []
    with open(target_file, 'r') as file:
        lines = file.readlines()
        for line in lines:
            samples = line.strip()
            sample_list.append(samples) 
    suffix = config["sample_suffix"]
    new_sample_files = []
    sample_prefixes = []
    for sample in sample_list:
        find_dir_command = f"find {DIR} -maxdepth 1 -type d -name {sample}*" ## find is a shell command that looks in the specified {DIR} with a depth of 1 meaning that it will only search within the specified directory and not in any subdirectories. 
        dir_result = subprocess.getoutput(find_dir_command)
        sample_dirs = dir_result.splitlines()       
        for sample_dir in sample_dirs:
            file_prefix = sample_dir.split('/')[-1]
            new_sample_file = os.path.join(sample_dir, file_prefix + suffix)
            new_sample_files.append(new_sample_file)
            sample_prefixes.append(file_prefix)
    return sample_prefixes

def get_target_names2(target_file):
    sample_list = []
    with open(target_file, 'r') as file:
        lines = file.readlines()
        for line in lines:
            samples = line.strip()
            sample_list.append(samples) 
    suffix = config["sample_suffix"]
    sample_prefixes = []
    for sample in sample_list:
        find_dir_command = f"find {DIR} -maxdepth 1 -type d -name '{sample}*'"
        dir_result = subprocess.getoutput(find_dir_command)
        sample_dirs = dir_result.splitlines()       
        for sample_dir in sample_dirs:
            file_prefix = sample_dir.split('/')[-1]
            # Split the prefix by "-" and take the first 5 fields
            parts = file_prefix.split('-')
            file_prefix = '-'.join(parts[:5])
            sample_prefixes.append(file_prefix)
    return sample_prefixes
rule all:
    input:
        plot = f"{config['outputpath']}/SNP-Plots/{config['description']}-SNP-PLOT.{config['plot_format']}",
        vcf = expand(f"{config['sampledirectory']}/{{sample}}/{{sample}}{config["sample_suffix"]}", sample=get_target_names(config["targetfile"])),
        flag = "deletion_done.flag"
        
        